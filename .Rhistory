x = "C√≥digo de Vacante",
y = "Promedio de remitidos") +
theme_minimal(base_size = 13) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Remitidos %>%
group_by(Vigencia, `C√≥digo Vacante`) %>%
summarise(total_remitidos = n()) %>%
ggplot(aes(x = Vigencia, y = total_remitidos, fill = `C√≥digo Vacante`)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Evoluci√≥n de los remitidos por a√±o y C√≥digo Vacante",
x = "A√±o",
y = "Total de remitidos") +
theme_minimal()
#Sacar el promedio por a√±o
Remitidos %>%
group_by(Vigencia, `C√≥digo Vacante`) %>%
summarise(total_remitidos = n()) %>%
mutate(remitidos_promedio=total_remitidos/length(unique(Vigencia))) %>%
ggplot(aes(x = Vigencia, y = total_remitidos, fill = remitidos_promedio)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Evoluci√≥n de los remitidos por a√±o y C√≥digo Vacante",
x = "A√±o",
y = "Total de remitidos") +
theme_minimal()
#Sacar el promedio por a√±o
Remitidos %>%
group_by(Vigencia, `C√≥digo Vacante`) %>%
summarise(total_remitidos = n()) %>%
mutate(remitidos_promedio=mean(total_remitidos))) %>%
#Cuantos remitidos por "C√≥digo Vacante" por a√±o
#Sacar el promedio por a√±o
Remitidos %>%
group_by(Vigencia, `C√≥digo Vacante`) %>%
summarise(total_remitidos = n()) %>%
mutate(remitidos_promedio_vacante=)) %>%
Remitidos %>%
group_by(Vigencia, `C√≥digo Vacante`) %>%
summarise(total_remitidos = mean()) %>%
ggplot(aes(x = Vigencia, y = total_remitidos, fill = remitidos_promedio)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Evoluci√≥n de los remitidos por a√±o y C√≥digo Vacante",
x = "A√±o",
y = "Total de remitidos") +
theme_minimal()
help summarise()
help summarise()
library(dplyr)
library(ggplot2)
library(ggthemes)
library(viridis)
promedios <- Remitidos %>%
group_by(Vigencia, `C√≥digo Vacante`) %>%
summarise(total_remitidos = n()) %>%
group_by(Vigencia) %>%
summarise(promedio_remitidos = mean(total_remitidos))
ggplot(promedios, aes(x = Vigencia, y = promedio_remitidos, group = 1, color = factor(Vigencia))) +
geom_line() +
geom_point() +
scale_color_viridis(discrete = TRUE) +
theme_few() +
labs(
title = "Promedio de remitidos por A√±o",
x = "Vigencia",
y = "Promedio de Remitidos",
color = "Vigencia"
)
# En RStudio:
bookdown::create_book("libro-econometria")   # genera carpeta y archivos base
# Leer datos de los estudiantes
estudiantes <- data.frame(
nombre = c("Ana Mar√≠a"),
correo = c("adiazescobar@gmail.com")
)
# Script: enviar_correos_semanales.R
library(blastula)
library(jsonlite)
library(glue)
# Leer datos de los estudiantes
estudiantes <- data.frame(
nombre = c("Ana Mar√≠a"),
correo = c("adiazescobar@gmail.com")
)
# Cargar el contenido del curso
contenido <- fromJSON("contenido.json")
# Suponemos que estamos en la Semana 3 (esto se puede automatizar con lubridate::isoweek(Sys.Date()))
semana_actual <- "Semana 3"
# Script: enviar_correos_semanales.R
library(blastula)
library(jsonlite)
library(glue)
# Leer datos de los estudiantes
estudiantes <- data.frame(
nombre = c("Ana Mar√≠a"),
correo = c("adiazescobar@gmail.com")
)
# Cargar el contenido del curso
contenido <- fromJSON("contenido.json")
# Estructura del contenido.json
# {
#   "Semana 1": {
#     "capitulo": "Introducci√≥n a R",
#     "link": "https://ejemplo.com/capitulo1",
#     "preguntas_abiertas": [
#       "¬øQu√© es R?",
#       "¬øCu√°les son las ventajas de usar R para an√°lisis de datos?"
#     ],
#     "preguntas_test": [
#       {
#         "texto": "¬øCu√°l es la funci√≥n para instalar paquetes en R?",
#         "opciones": [
#           "install.packages()",
#           "library()",
#           "require()",
#           "source()"
#         ]
#       }
#     ]
#   },
#   "Semana 2": {
#     "capitulo": "Manipulaci√≥n de datos con dplyr",
#     "link": "https://ejemplo.com/capitulo2",
#     "preguntas_abiertas": [
#       "¬øQu√© es dplyr?",
#       "¬øC√≥mo se usa la funci√≥n filter()?"
#     ],
#     "preguntas_test": [
#       {
#         "texto": "¬øQu√© funci√≥n se usa para seleccionar columnas en dplyr?",
#         "opciones": [
#           "select()",
#           "filter()",
#           "mutate()",
#           "arrange()"
#         ]
#       }
#     ]
#   },
#   "Semana 3": {
#     "capitulo": "Visualizaci√≥n de datos con ggplot2",
#     "link": "https://ejemplo.com/capitulo3",
#     "preguntas_abiertas": [
#       "¬øQu√© es ggplot2?",
#       "¬øC√≥mo se crea un gr√°fico b√°sico?"
#     ],
#     "preguntas_test": [
#       {
#         "texto": "¬øCu√°l es la funci√≥n principal para crear gr√°ficos en ggplot2?",
#         "opciones": [
#           "ggplot()",
#           "qplot()",
#           "plot()",
#           "geom_point()"
#         ]
#       }
#     ]
#   }
# }
# Suponemos que estamos en la Semana 3 (esto se puede automatizar con lubridate::isoweek(Sys.Date()))
semana_actual <- "Semana 3"
datos <- contenido[[semana_actual]]
# Crear correo personalizado para cada estudiante
crear_correo <- function(nombre) {
compose_email(
body = md(glue(
"Hola **{nombre}** üëã,
Esta semana vamos a estudiar el cap√≠tulo **{datos$capitulo}**. Puedes leerlo aqu√≠:
üëâ [Ir al cap√≠tulo]({datos$link})
---
### üß† Preguntas de repaso
- {datos$preguntas_abiertas[1]}
- {datos$preguntas_abiertas[2]}
---
### ‚úÖ Pregunta de selecci√≥n m√∫ltiple
**{datos$preguntas_test[[1]]$texto}**
A. {datos$preguntas_test[[1]]$opciones[1]}
B. {datos$preguntas_test[[1]]$opciones[2]}
C. {datos$preguntas_test[[1]]$opciones[3]}
D. {datos$preguntas_test[[1]]$opciones[4]}
*(Responde a este correo indicando la opci√≥n que consideres correcta)*
---
¬°√Ånimo con el estudio! üö¥‚Äç‚ôÄÔ∏è"
))
)
}
# Enviar correos
for (i in 1:nrow(estudiantes)) {
email <- crear_correo(estudiantes$nombre[i])
smtp_send(
email,
from = "tuprofesor@universidad.edu",  # reemplaza por tu direcci√≥n real
to = estudiantes$correo[i],
subject = glue("üìö Semana de estudio - {datos$capitulo}"),
credentials = creds_key("gmail")  # o usa creds_file() si guardas las credenciales
)
}
# Script: enviar_correos_semanales.R
# Script: enviar_correos_semanales.R
library(blastula)
library(jsonlite)
library(glue)
# Leer datos de los estudiantes
estudiantes <- data.frame(
nombre = c("Ana Mar√≠a"),
correo = c("adiazescobar@gmail.com")
)
# Cargar el contenido del curso
contenido <- fromJSON("contenido.json")
# Estructura del contenido.json
# {
#   "Semana 1": {
#     "capitulo": "Introducci√≥n a R",
#     "link": "https://ejemplo.com/capitulo1",
#     "preguntas_abiertas": [
#       "¬øQu√© es R?",
#       "¬øCu√°les son las ventajas de usar R para an√°lisis de datos?"
#     ],
#     "preguntas_test": [
#       {
#         "texto": "¬øCu√°l es la funci√≥n para instalar paquetes en R?",
#         "opciones": [
#           "install.packages()",
#           "library()",
#           "require()",
#           "source()"
#         ]
#       }
#     ]
#   },
#   "Semana 2": {
#     "capitulo": "Manipulaci√≥n de datos con dplyr",
#     "link": "https://ejemplo.com/capitulo2",
#     "preguntas_abiertas": [
#       "¬øQu√© es dplyr?",
#       "¬øC√≥mo se usa la funci√≥n filter()?"
#     ],
#     "preguntas_test": [
#       {
#         "texto": "¬øQu√© funci√≥n se usa para seleccionar columnas en dplyr?",
#         "opciones": [
#           "select()",
#           "filter()",
#           "mutate()",
#           "arrange()"
#         ]
#       }
#     ]
#   },
#   "Semana 3": {
#     "capitulo": "Visualizaci√≥n de datos con ggplot2",
#     "link": "https://ejemplo.com/capitulo3",
#     "preguntas_abiertas": [
#       "¬øQu√© es ggplot2?",
#       "¬øC√≥mo se crea un gr√°fico b√°sico?"
#     ],
#     "preguntas_test": [
#       {
#         "texto": "¬øCu√°l es la funci√≥n principal para crear gr√°ficos en ggplot2?",
#         "opciones": [
#           "ggplot()",
#           "qplot()",
#           "plot()",
#           "geom_point()"
#         ]
#       }
#     ]
#   }
# }
# Suponemos que estamos en la Semana 3 (esto se puede automatizar con lubridate::isoweek(Sys.Date()))
semana_actual <- "Semana 2"
datos <- contenido[[semana_actual]]
# Crear correo personalizado para cada estudiante
crear_correo <- function(nombre) {
compose_email(
body = md(glue(
"Hola **{nombre}** üëã,
Esta semana vamos a estudiar el cap√≠tulo **{datos$capitulo}**. Puedes leerlo aqu√≠:
üëâ [Ir al cap√≠tulo]({datos$link})
---
### üß† Preguntas de repaso
- {datos$preguntas_abiertas[1]}
- {datos$preguntas_abiertas[2]}
---
### ‚úÖ Pregunta de selecci√≥n m√∫ltiple
**{datos$preguntas_test[[1]]$texto}**
A. {datos$preguntas_test[[1]]$opciones[1]}
B. {datos$preguntas_test[[1]]$opciones[2]}
C. {datos$preguntas_test[[1]]$opciones[3]}
D. {datos$preguntas_test[[1]]$opciones[4]}
*(Responde a este correo indicando la opci√≥n que consideres correcta)*
---
¬°√Ånimo con el estudio! üö¥‚Äç‚ôÄÔ∏è"
))
)
}
# Enviar correos
for (i in 1:nrow(estudiantes)) {
email <- crear_correo(estudiantes$nombre[i])
smtp_send(
email,
from = "tuprofesor@universidad.edu",  # reemplaza por tu direcci√≥n real
to = estudiantes$correo[i],
subject = glue("üìö Semana de estudio - {datos$capitulo}"),
credentials = creds_key("gmail")  # o usa creds_file() si guardas las credenciales
)
}
# Script: enviar_correos_semanales.R
library(blastula)
library(jsonlite)
library(glue)
# Leer datos de los estudiantes
estudiantes <- data.frame(
nombre = c("Ana Mar√≠a"),
correo = c("adiazescobar@gmail.com")
)
# Cargar el contenido del curso
contenido <- fromJSON("contenido.json")
# Estructura del contenido.json
# {
#   "Semana 1": {
#     "capitulo": "Introducci√≥n a R",
#     "link": "https://ejemplo.com/capitulo1",
#     "preguntas_abiertas": [
#       "¬øQu√© es R?",
#       "¬øCu√°les son las ventajas de usar R para an√°lisis de datos?"
#     ],
#     "preguntas_test": [
#       {
#         "texto": "¬øCu√°l es la funci√≥n para instalar paquetes en R?",
#         "opciones": [
#           "install.packages()",
#           "library()",
#           "require()",
#           "source()"
#         ]
#       }
#     ]
#   },
#   "Semana 2": {
#     "capitulo": "Manipulaci√≥n de datos con dplyr",
#     "link": "https://ejemplo.com/capitulo2",
#     "preguntas_abiertas": [
#       "¬øQu√© es dplyr?",
#       "¬øC√≥mo se usa la funci√≥n filter()?"
#     ],
#     "preguntas_test": [
#       {
#         "texto": "¬øQu√© funci√≥n se usa para seleccionar columnas en dplyr?",
#         "opciones": [
#           "select()",
#           "filter()",
#           "mutate()",
#           "arrange()"
#         ]
#       }
#     ]
#   },
#   "Semana 3": {
#     "capitulo": "Visualizaci√≥n de datos con ggplot2",
#     "link": "https://ejemplo.com/capitulo3",
#     "preguntas_abiertas": [
#       "¬øQu√© es ggplot2?",
#       "¬øC√≥mo se crea un gr√°fico b√°sico?"
#     ],
#     "preguntas_test": [
#       {
#         "texto": "¬øCu√°l es la funci√≥n principal para crear gr√°ficos en ggplot2?",
#         "opciones": [
#           "ggplot()",
#           "qplot()",
#           "plot()",
#           "geom_point()"
#         ]
#       }
#     ]
#   }
# }
# Suponemos que estamos en la Semana 3 (esto se puede automatizar con lubridate::isoweek(Sys.Date()))
semana_actual <- "Semana 2"
datos <- contenido[[semana_actual]]
# Crear correo personalizado para cada estudiante
crear_correo <- function(nombre) {
compose_email(
body = md(glue(
"Hola **{nombre}** üëã,
Esta semana vamos a estudiar el cap√≠tulo **{datos$capitulo}**. Puedes leerlo aqu√≠:
üëâ [Ir al cap√≠tulo]({datos$link})
---
### üß† Preguntas de repaso
- {datos$preguntas_abiertas[1]}
- {datos$preguntas_abiertas[2]}
---
# Asegurar que preguntas_test[[1]] se trata como lista
pregunta <- datos$preguntas_test[[1]]
### ‚úÖ Pregunta de selecci√≥n m√∫ltiple
**{pregunta$texto}**
A. {pregunta$opciones[1]}
B. {pregunta$opciones[2]}
C. {pregunta$opciones[3]}
D. {pregunta$opciones[4]}
*(Responde a este correo indicando la opci√≥n que consideres correcta)*
---
¬°√Ånimo con el estudio! üö¥‚Äç‚ôÄÔ∏è"
))
)
}
pregunta <- datos$preguntas_test[[1]]
# Enviar correos
for (i in 1:nrow(estudiantes)) {
email <- crear_correo(estudiantes$nombre[i])
smtp_send(
email,
from = "tuprofesor@universidad.edu",  # reemplaza por tu direcci√≥n real
to = estudiantes$correo[i],
subject = glue("üìö Semana de estudio - {datos$capitulo}"),
credentials = creds_key("gmail")  # o usa creds_file() si guardas las credenciales
)
}
library(blastula)
library(jsonlite)
library(glue)
# Leer datos de los estudiantes
estudiantes <- data.frame(
nombre = c("Ana Mar√≠a"),
correo = c("adiazescobar@gmail.com")
)
# Cargar el contenido del curso
contenido <- fromJSON("contenido.json")
# Semana actual (esto se puede automatizar luego con lubridate)
semana_actual <- "Semana 2"
datos <- contenido[[semana_actual]]
pregunta <- datos$preguntas_test[[1]]  # <-- Mueve esto fuera del glue()
# Crear correo personalizado para cada estudiante
crear_correo <- function(nombre) {
compose_email(
body = md(glue(
"Hola **{nombre}** üëã,
Esta semana vamos a estudiar el cap√≠tulo **{datos$capitulo}**. Puedes leerlo aqu√≠:
üëâ [Ir al cap√≠tulo]({datos$link})
---
### üß† Preguntas de repaso
- {datos$preguntas_abiertas[1]}
- {datos$preguntas_abiertas[2]}
---
### ‚úÖ Pregunta de selecci√≥n m√∫ltiple
**{pregunta$texto}**
A. {pregunta$opciones[1]}
B. {pregunta$opciones[2]}
C. {pregunta$opciones[3]}
D. {pregunta$opciones[4]}
*(Responde a este correo indicando la opci√≥n que consideres correcta)*
---
¬°√Ånimo con el estudio! üö¥‚Äç‚ôÄÔ∏è"
))
)
}
# Enviar correos
for (i in 1:nrow(estudiantes)) {
email <- crear_correo(estudiantes$nombre[i])
smtp_send(
email,
from = "tuprofesor@universidad.edu",  # reempl√°zalo por tu correo
to = estudiantes$correo[i],
subject = glue("üìö Semana de estudio - {datos$capitulo}"),
credentials = creds_key("gmail")  # o creds_file() si usas JSON
)
}
A
source("~/Downloads/enviar_correos_semanales.R")
source("~/Downloads/enviar_correos_semanales.R")
install.packages("keyring")
source("~/Downloads/enviar_correos_semanales.R")
source("~/Downloads/enviar_correos_semanales.R")
source("~/Downloads/enviar_correos_semanales.R")
source("~/Downloads/enviar_correos_semanales.R")
source("~/Downloads/enviar_correos_semanales.R")
source("~/Downloads/enviar_correos_semanales.R")
source("~/Downloads/enviar_correos_semanales.R")
source("~/econometriaII/enviar_correos_semanales.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
install.packages("htmltools")  # si a√∫n no lo tienes
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/econometriaII/correo1.R")
source("~/Dropbox/ClasesR/libro_cortes/render_y_sube.R")
